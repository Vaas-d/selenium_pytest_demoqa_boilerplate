{"uid":"424477c1836bf594","name":"test_moved_link","fullName":"tests.test_links.TestLinks#test_moved_link","historyId":"dabe9e22e104eed8f518fcef84da711d","time":{"start":1687070000122,"stop":1687070001230,"duration":1108},"description":"Test to validate moved link on the page and verify response\n\n        :param test_setup: setting up the browser and page objects\n        :return: None\n        ","descriptionHtml":"<p>Test to validate moved link on the page and verify response</p>\n<pre><code>    :param test_setup: setting up the browser and page objects\n    :return: None\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555620a064e3 <unknown>\n#1 0x555620735c76 <unknown>\n#2 0x555620771c96 <unknown>\n#3 0x555620771dc1 <unknown>\n#4 0x5556207ab7f4 <unknown>\n#5 0x55562079103d <unknown>\n#6 0x5556207a930e <unknown>\n#7 0x555620790de3 <unknown>\n#8 0x5556207662dd <unknown>\n#9 0x55562076734e <unknown>\n#10 0x5556209c63e4 <unknown>\n#11 0x5556209ca3d7 <unknown>\n#12 0x5556209d4b20 <unknown>\n#13 0x5556209cb023 <unknown>\n#14 0x5556209991aa <unknown>\n#15 0x5556209ef6b8 <unknown>\n#16 0x5556209ef847 <unknown>\n#17 0x5556209ff243 <unknown>\n#18 0x7fda7e205b43 <unknown>","statusTrace":"self = <tests.test_links.TestLinks object at 0x7f50f51a4b50>, test_setup = None\n\n    @pytest.mark.smoke\n    def test_moved_link(self, test_setup):\n        \"\"\"Test to validate moved link on the page and verify response\n    \n        :param test_setup: setting up the browser and page objects\n        :return: None\n        \"\"\"\n    \n        self.links.click_moved_link()\n    \n>       text = self.links.get_link_response()\n\ntests/test_links.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/links_page.py:56: in get_link_response\n    return self.__link_response.get_text()\nutils/UIObject.py:31: in get_text\n    text = self.get_element().text\nutils/UIObject.py:20: in get_element\n    self.wait_to_appear(wait)\nutils/UIObject.py:75: in wait_to_appear\n    if self.exists():\nutils/UIObject.py:42: in exists\n    WebDriverWait(Browser.get_driver(), timeout).until(EC.presence_of_element_located((self.by, self.locator)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8597cde1c95e980c5e10cfcd7d0d2a90\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x7f50f51455a0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x555620a064e3 <unknown>\nE       #1 0x555620735c76 <unknown>\nE       #2 0x555620771c96 <unknown>\nE       #3 0x555620771dc1 <unknown>\nE       #4 0x5556207ab7f4 <unknown>\nE       #5 0x55562079103d <unknown>\nE       #6 0x5556207a930e <unknown>\nE       #7 0x555620790de3 <unknown>\nE       #8 0x5556207662dd <unknown>\nE       #9 0x55562076734e <unknown>\nE       #10 0x5556209c63e4 <unknown>\nE       #11 0x5556209ca3d7 <unknown>\nE       #12 0x5556209d4b20 <unknown>\nE       #13 0x5556209cb023 <unknown>\nE       #14 0x5556209991aa <unknown>\nE       #15 0x5556209ef6b8 <unknown>\nE       #16 0x5556209ef847 <unknown>\nE       #17 0x5556209ff243 <unknown>\nE       #18 0x7fda7e205b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"new_session","time":{"start":1687069996784,"stop":1687069999689,"duration":2905},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"test_setup","time":{"start":1687069999689,"stop":1687070000122,"duration":433},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"afterStages":[{"name":"new_session::0","time":{"start":1687070001244,"stop":1687070001402,"duration":158},"status":"passed","steps":[],"attachments":[{"uid":"2c414682aaae1b7d","name":"teardown_screenshot","source":"2c414682aaae1b7d.png","type":"image/png","size":187883}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0}],"labels":[{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_links"},{"name":"subSuite","value":"TestLinks"},{"name":"host","value":"fv-az298-776"},{"name":"thread","value":"2645-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_links"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"424477c1836bf594.json","parameterValues":[]}