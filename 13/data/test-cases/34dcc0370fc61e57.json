{"uid":"34dcc0370fc61e57","name":"test_forbidden_link","fullName":"tests.test_links.TestLinks#test_forbidden_link","historyId":"0bd61a3dc27cd9bc4c663740ac17bde3","time":{"start":1687073530542,"stop":1687073591103,"duration":60561},"description":"Test to validate forbidden link on the page and verify response\n\n        :param test_setup: setting up the browser and page objects\n        :return: None\n        ","descriptionHtml":"<p>Test to validate forbidden link on the page and verify response</p>\n<pre><code>    :param test_setup: setting up the browser and page objects\n    :return: None\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: Locator: p[id=\"linkResponse\"] did not appear in 60 seconds!","statusTrace":"self = <tests.test_links.TestLinks object at 0x7fe244592d10>, test_setup = None\n\n    @pytest.mark.smoke\n    def test_forbidden_link(self, test_setup):\n        \"\"\"Test to validate forbidden link on the page and verify response\n    \n        :param test_setup: setting up the browser and page objects\n        :return: None\n        \"\"\"\n    \n        self.links.click_forbidden_link()\n    \n>       text = self.links.get_link_response()\n\ntests/test_links.py:142: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/links_page.py:56: in get_link_response\n    return self.__link_response.get_text()\nutils/UIObject.py:31: in get_text\n    text = self.get_element().text\nutils/UIObject.py:20: in get_element\n    self.wait_to_appear(wait)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utils.UIObject.UIObject object at 0x7fe2445e7b20>, seconds = 60\nignore_error = False\n\n    def wait_to_appear(self, seconds=30, ignore_error=False):\n        start = time.time()\n        while (time.time() - start) < seconds:\n            if self.exists():\n                return self\n        if not ignore_error:\n>           raise AssertionError(f\"Locator: {self.locator} did not appear in {seconds} seconds!\")\nE           AssertionError: Locator: p[id=\"linkResponse\"] did not appear in 60 seconds!\n\nutils/UIObject.py:78: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"new_session","time":{"start":1687073526876,"stop":1687073530096,"duration":3220},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"test_setup","time":{"start":1687073530096,"stop":1687073530542,"duration":446},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"new_session::0","time":{"start":1687073591150,"stop":1687073592448,"duration":1298},"status":"passed","steps":[],"attachments":[{"uid":"ab330aa334d9c9cf","name":"teardown_screenshot","source":"ab330aa334d9c9cf.png","type":"image/png","size":377166}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_links"},{"name":"subSuite","value":"TestLinks"},{"name":"host","value":"fv-az674-238"},{"name":"thread","value":"2661-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_links"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"34dcc0370fc61e57.json","parameterValues":[]}